Set-ExecutionPolicy Unrestricted
Set-ExecutionPolicy Restricted 

powershell.exe -Command  "start-process -verb runAs "powershell " -argumentlist "C:\3FMeS\DPM\bat\limpeza.logs.ps1"

wsl --shutdown
	Para processo e liberar memoria da máquina virtural do WSL.
	
#########################################################################################################################
#########################################################################################################################

Listar arquivos recetentes:	
	
$MyPath = "\\sp01w2k12mtah01\SecureClientCert\Receber"

$MyPath = "\\vsao001079\SecureClient\receber"

$MyPath = "C:\BVMF\transfer\receber"


$recentFiles  = @(Get-ChildItem -Filter BVBG.028.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.066.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.067.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.068.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.069.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.090.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.017.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.062.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.063.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.091.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)
$recentFiles += @(Get-ChildItem -Filter BVBG.086.*.*  -Path $MyPath | Sort-Object -Property LastWriteTime -Descending | Select-Object -First 1)

$recentFiles | select -Property Name, LastWriteTime | Sort-Object -Property LastWriteTime


#########################################################################################################################
#########################################################################################################################

Listar apagar pastas:	

$Now = Get-Date
$Days = 15
$LastWrite = $Now.AddDays(-$Days)
$LastWrite
foreach($folder in 
@(Get-ChildItem -Path "C:\3FMeS\SCL\log\historicMessageReceiver" | 
Where-Object {$_.Attributes -eq "Directory"} | 
Where-Object {$_.CreationTime -le "$LastWrite"} |
Sort-Object -Property Name | 
Select FullName)
)
{
    Write-output $folder.FullName
	Remove-Item $folder.FullName -Recurse -Force
	Write-output (get-date).ToString("yyyy-MM-dd HH:mm:ss")
	Write-output "############################################################################"
}


#################################################

foreach($folder in 
@(Get-ChildItem -Filter 2022* -Path "C:\3FMeS\SCL\log\historicMessageReceiver" | 
Where-Object {$_.Attributes -eq "Directory"} | 
Where-Object {$_.Name -lt "202209"} | 
Sort-Object -Property Name | 
Select FullName))
{
    Write-output $folder.FullName
	Remove-Item $folder.FullName -Recurse -Force
	Write-output (get-date).ToString("yyyy-MM-dd HH:mm:ss")
	Write-output "############################################################################"
}

########################################
Lista quantidade de arquivos da masta mais antiga (pelo nome).

$folder = @(Get-ChildItem "C:\3FMeS\SCL\log\historicMessageReceiver" | 
Sort-Object -Property Name | 
Select-Object -First 1) 
$folderName = "C:\3FMeS\SCL\log\historicMessageReceiver\" + $folder.Name
$files = Get-ChildItem $folderName 
$folderName + ": " + $files.count

cls ; $folder = @(Get-ChildItem "C:\3FMeS\SCL\log\historicMessageReceiver" | Sort-Object -Property Name | Select-Object -First 1) ; $folderName = "C:\3FMeS\SCL\log\historicMessageReceiver\" + $folder.Name ; $files = Get-ChildItem $folderName ; $folderName + ": " + $files.count 

#########################################################################################################################
#########################################################################################################################

Obter tamanho da pastas

$Size=0
Get-ChildItem C:\3FMeS\SCL\log\historicMessageReceiver -Recurse -Attributes "Hidden,!Directory" | %{$Size+=$_.length} 
$Size/1GB


##############
Where-Object{($_.Name -match '^fms-fix-engine-stdout')}
#############


#########################################################################################################################
#########################################################################################################################
Procurar string em arquivos de uma pasta.

$logFolders = @("C:\3FMeS\DPM\log\flows")
foreach($logFolder in $logFolders)
{
    foreach($file in 
	@(Get-ChildItem -Path $logFolder | 
	Sort-Object -Property CreationTime | 
	Select FullName)
	)
	{
		if ( Get-Content $file.FullName | Select-String “SAXParseException” -Quiet )
		{
			Write-Output $file.FullName
		}
		
	}
}