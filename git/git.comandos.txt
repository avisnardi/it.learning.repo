##########################################################################################
### Configurar user name globalmente.

git config --global user.name "Alexandre Visnardi"

##########################################################################################
### Configurar user mail globalmente.

git config --global user.mail "avisnardi@gmail.com"

##########################################################################################
### Altetar nome da branch principal.

git config --global init.defaultBranch main

##########################################################################################
### Altetar editor padrão de mensagens

git config --global core.editor "code --wait"

##########################################################################################
### Consultar configurações.

git config --list

##########################################################################################
### Criar repositorio na pasta atual.

git init

##########################################################################################
### Remover arquivos do git (to unstage)

git rm --cached <file>

##########################################################################################
### Remover arquivos do git (to unstage) se já tiver algum commit.

git restore --staged <file>

##########################################################################################
### Volta versão do arquivo para versão do último commit. (Perde alterações do arquivo não comitadas)

git checkout <file.name>


##########################################################################################
### Comitar arquivos

git commit -m "<Mensagem>."

##########################################################################################
### Alterar mensagem do commit realizados - Cuidado pq mata o commit anterior.

git commit --amend -m "Nova mensagem."

### Para adicionar arquivos que foram esquecidos no mesmo commit.
git commit --amend --no-edit

##########################################################################################
### Verificar alterações de arquivos modificados e não adionados. 

git diff

##########################################################################################
### Restaurar todos os arquivos não commitados

git reset --hard



##########################################################################################
### Verificar alterações de arquivos modificados e adionados mas não comitados.

git diff --cached
ou
git diff --staged


##########################################################################################
### Listar commits realizados

git log

### Listagem resumida
git log --oneline

### Quantidade de comnits
git log -5 

### Mostrar alterações
git log -p
ou 
git log --patch 

### Mostrar arquivos alterados
git log -stat 

### Mostrar quantidade de arquivos alterados
git log -shortstat 


##########################################################################################
### Navegar para versão do commit (voltar no tempo)

git checkout 3ikj3k

##########################################################################################
### Volta versão do arquivo para versão do último commit. (Perde alterações do arquivo não comitadas)

git checkout <file.name>

##########################################################################################
### Remover arquivos não rastreados

git clean -f

##########################################################################################
### Parar rastreamento de arquivo

git update-index --skip-worktree <file.name>

##########################################################################################
### Voltar rastreamento de arquivo,

git update-index --no-skip-worktree <file.name>

##########################################################################################
### Consultar vinculos com repositórios remotos

git remote -v

##########################################################################################
### Associar repositório local com repositorio remoto. (Origin é somente um alias)

git remote add origin <url.do.repositorio.remoto>

##########################################################################################
### Alterar url para qual um alias aponta. (Origin é somente um alias)

git remote set-url origin <nova.url.do.repositorio.remoto>

##########################################################################################
### Enviar artefatos comitados para repositorio remoto.

git push

##########################################################################################
### Puxar artefatos comitados do repositorio remoto para repositorio local.

git pull


##########################################################################################
### Listar branches

git branch
ou
git branch --list

##########################################################################################
### Criar uma branch (a partir da branch atual)

git branch <nome.da.branch>

##########################################################################################
### Para usar uma outra branch

git checkout <nome.da.branch>
ou
git switch <nome.da.branch>

### Volta para branch anteior.
git switch - 

##########################################################################################
### Para criar e já usar uma branch nova  (a partir da branch atual)

git checkout -b <nome.da.branch>
ou
git switch -c <nome.da.branch>
 
##########################################################################################
### Mudar de branch sem levar arquivos rastreados e perde os arquivos

git checkout -f <nova.branch>

##########################################################################################
### Asssociar a branch local à uma branch remota

git switch <branch.local> /* Migrar para a branch local desejada

git push --set-upstream origin <nome.da.branch.remota>
ou
git push -u <nome.da.branch.remota>

##########################################################################################
### Apagar uma branch local

git branch -d <nome.da.branch>


##########################################################################################
### Apagar uma branch remota

git push --delete <nome.da.branch>
















